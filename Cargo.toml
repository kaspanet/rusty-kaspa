[workspace]
members = [
    "core",
    "wallet/core",
    "wallet/cli",
    "wallet/native",
    "wallet/wasm",
    "wallet/bip32",
    "consensus",
    "consensus/core",
    "consensus/notify",
    "consensus/pow",
    "kaspad",
    "simpa",
    "wasm",
    "math",
    "crypto/hashes",
    "crypto/muhash",
    "crypto/addresses",
    "crypto/merkle",
    "notify",
    "indexes/core",
    "indexes/processor",
    "indexes/utxoindex",
    "rpc/core",
    "rpc/service",
    "rpc/grpc/core",
    "rpc/grpc/client",
    "rpc/grpc/server",
    "rpc/macros",
    "rpc/wrpc/client",
    "rpc/wrpc/server",
    "rpc/wrpc/proxy",
    "rpc/wrpc/wasm",
    "mining",
    "mining/errors",
    "protocol/p2p",
    "protocol/flows",
    "components/addressmanager",
    "components/connectionmanager",
    "components/consensusmanager",
    "database",
    "crypto/txscript",
    "crypto/txscript/errors",
    "testing/integration",
    "rothschild",
    "metrics/perf_monitor"
]

[workspace.package]
version = "0.1.2"
authors = ["Kaspa developers"]
license = "MIT/Apache-2.0"
edition = "2021"
include = ["src/**/*.rs", "Cargo.toml"]

[workspace.dependencies]

# not published
kaspa-addressmanager = { path = "components/addressmanager" }
kaspa-connectionmanager = { path = "components/connectionmanager" }
kaspa-consensusmanager = { path = "components/consensusmanager" }
kaspa-mining = { path = "mining" }
kaspa-mining-errors = { path = "mining/errors" }
kaspa-p2p-flows = { path = "protocol/flows" }
kaspa-p2p-lib = { path = "protocol/p2p" }
kaspa-testing-integration = { path = "testing/integration" }
kaspa-utxoindex = { path = "indexes/utxoindex" }
kaspa-rpc-service = { version = "0.1.2", path = "rpc/service" }

# published
kaspa-addresses = { version = "0.1.2", path = "crypto/addresses" }
kaspa-bip32 = { version = "0.1.2", path = "wallet/bip32" }
kaspa-consensus = { version = "0.1.2", path = "consensus" }
kaspa-consensus-core = { version = "0.1.2", path = "consensus/core" }
kaspa-consensus-notify = { version = "0.1.2", path = "consensus/notify" }
kaspa-core = { version = "0.1.2", path = "core" }
kaspa-database = { version = "0.1.2", path = "database" }
kaspa-grpc-client = { version = "0.1.2", path = "rpc/grpc/client" }
kaspa-grpc-core = { version = "0.1.2", path = "rpc/grpc/core" }
kaspa-hashes = { version = "0.1.2", path = "crypto/hashes" }
kaspa-math = { version = "0.1.2", path = "math" }
kaspa-merkle = { version = "0.1.2", path = "crypto/merkle" }
kaspa-muhash = { version = "0.1.2", path = "crypto/muhash" }
kaspa-notify = { version = "0.1.2", path = "notify" }
kaspa-pow = { version = "0.1.2", path = "consensus/pow" }
kaspa-rpc-core = { version = "0.1.2", path = "rpc/core" }
kaspa-rpc-macros = { version = "0.1.2", path = "rpc/macros" }
kaspa-txscript = { version = "0.1.2", path = "crypto/txscript" }
kaspa-txscript-errors = { version = "0.1.2", path = "crypto/txscript/errors" }
kaspa-utils = { version = "0.1.2", path = "utils" }
kaspa-wallet-core = { version = "0.1.2", path = "wallet/core" }
kaspa-wasm = { version = "0.1.2", path = "wasm" }
kaspa-wrpc-client = { version = "0.1.2", path = "rpc/wrpc/client" }
kaspa-wrpc-wasm = { version = "0.1.2", path = "rpc/wrpc/wasm" }

# not published
kaspa-grpc-server = { path = "rpc/grpc/server" }
kaspa-index-core = { path = "indexes/core" }
kaspa-index-processor = { path = "indexes/processor" }
kaspa-wallet-cli = { path = "wallet/cli" }
kaspa-wallet-cli-native = { path = "wallet/native" }
kaspa-wallet-cli-wasm = { path = "wallet/wasm" }
kaspa-wrpc-proxy = { path = "rpc/wrpc/proxy" }
kaspa-wrpc-server = { path = "rpc/wrpc/server" }
kaspad = { path = "kaspad" }
kaspa-perf-monitor = { path = "metrics/perf_monitor" }

# external
thiserror = "1"
faster-hex = "0.6"
itertools = "0.10"
rand = "0.8"
rand_chacha = "0.3"
rayon = "1"
tempfile = "3.3"
blake2b_simd = "1"
sha2 = "0.10"
serde = { version = "1", features = ["derive", "rc"] }
serde_json = "1.0.91"
serde-wasm-bindgen = "0.4.5"
futures-util = { version = "0.3", default-features = false, features = [
    "alloc",
] }
futures = { version = "0.3" }
bincode = { version = "1", default-features = false }
tokio = { version = "1", features = ["sync", "rt-multi-thread"] }
wasm-bindgen = { version = "0.2", features = ["serde-serialize"] }
criterion = { version = "0.4", default-features = false }
indexmap = "1.9.1"
parking_lot = "0.12"
smallvec = { version = "1.10.0", features = ["serde"] }
borsh = { version = "0.9.1", features = ["rc"] } # please keep this fixed
async-std = { version = "1.12.0", features = ['attributes'] }
async-channel = "1.8.0"
clap = { version = "4.0.23", features = ["derive", "string", "cargo"] }
derive_more = { version = "0.99" }
log = "0.4"
cfg-if = "1.0.0"
rocksdb = "0.21"
num_cpus = "1.15.0"
async-trait = "0.1.57"
paste = "1.0.11"
regex = "1.6.0"
pad = "0.1.6"
convert_case = "0.5.0"
wasm-bindgen-futures = "0.4.33"
js-sys = "0.3.56"
getrandom = { version = "0.2.8", features = ["js"] }
uuid = { version = "1.2.2", features = ["v4", "fast-rng", "serde"] }
serde_bytes = "0.11.11"
# bip32 dependencies
rand_core = { version = "0.6", features = ["std"] }
bs58 = { version = "0.4", features = ["check"], default-features = false }
hmac = { version = "0.12", default-features = false }
secp256k1 = { version = "0.24", features = ["global-context", "rand-std"] }
#sha2 = {version = "0.10", default-features = false}
zeroize = { version = "1", default-features = false, features = ["alloc"] }
ripemd = { version = "0.1", default-features = false }
subtle = { version = "2", default-features = false }
once_cell = { version = "1" }
pbkdf2 = { version = "0.11", default-features = false }

# workflow dependencies
workflow-log = { version = "0.3.10" }
workflow-core = { version = "0.3.10" }
workflow-wasm = { version = "0.3.10" }
workflow-dom = { version = "0.3.10" }
workflow-rpc = { version = "0.3.11" }
workflow-terminal = { version = "0.3.10" }

# workflow-log = { path = "../workflow-rs/log" }
# workflow-core = { path = "../workflow-rs/core" }
# workflow-wasm = { path = "../workflow-rs/wasm" }
# workflow-dom = { path = "../workflow-rs/dom" }
# workflow-rpc = { path = "../workflow-rs/rpc" }
# workflow-terminal = { path = "../workflow-rs/terminal" }

[profile.release]
lto = "thin"
strip = true
overflow-checks = true

[profile.heap]
inherits = "release"
debug = true
strip = false
