# ---------------------------------------- Chef image -------------------------------------------
FROM rust:1.90-alpine AS chef
RUN apk --no-cache add \
  musl-dev \
  protobuf-dev \
  g++ \
  clang15-dev \
  linux-headers \
  wasm-pack \
  openssl-dev
RUN cargo install cargo-chef --locked
WORKDIR /app

# ---------------------------------------- Planner image ----------------------------------------
FROM chef AS planner
COPY . .
RUN cargo chef prepare --recipe-path recipe.json

# ---------------------------------------- Builder image ----------------------------------------
FROM chef AS builder
COPY --from=planner /app/recipe.json recipe.json

ENV RUSTFLAGS="-C target-feature=-crt-static" \
  CARGO_REGISTRIES_CRATES_IO_PROTOCOL="sparse"

# Build dependencies - this is the caching Docker layer
RUN cargo chef cook --release --recipe-path recipe.json -p kaspa-wallet --bin kaspa-wallet

COPY . .
RUN --mount=type=cache,id=cargo-registry,target=/usr/local/cargo/registry,sharing=locked \
    --mount=type=cache,id=cargo-git,target=/usr/local/cargo/git,sharing=locked \
    --mount=type=cache,id=cargo-target,target=/app/target,sharing=locked \
    cargo build --release --bin kaspa-wallet \
    && cp /app/target/release/kaspa-wallet /app/kaspa-wallet   # <-- outside the mount, persists


# ---------------------------------------- Runtime image ----------------------------------------
FROM alpine AS runtime
WORKDIR /app

RUN apk --no-cache add \
  libgcc \
  libstdc++ \
  tini \
  ca-certificates

COPY --from=builder /app/kaspa-wallet .

USER root
ENTRYPOINT [ "/sbin/tini", "--" ]
CMD [ "/app/kaspa-wallet" ]
